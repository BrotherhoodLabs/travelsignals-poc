# Configuration de l'application
quarkus.application.name=travelsignals-backend
quarkus.application.version=1.0.0-SNAPSHOT

# Ports
quarkus.http.port=8080
quarkus.http.cors=true

# OpenAPI
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/q/swagger-ui
quarkus.openapi.path=/q/openapi

# Health
quarkus.smallrye-health.ui.enable=true
quarkus.smallrye-health.ui.path=/q/health-ui

# Kafka
kafka.bootstrap.servers=localhost:9092

# Topics Kafka
mp.messaging.outgoing.price-updates.connector=smallrye-kafka
mp.messaging.outgoing.price-updates.topic=price-updates
mp.messaging.outgoing.price-updates.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.price-updates.value.serializer=io.quarkus.kafka.client.serialization.JsonObjectSerializer

mp.messaging.outgoing.weather-alerts.connector=smallrye-kafka
mp.messaging.outgoing.weather-alerts.topic=weather-alerts
mp.messaging.outgoing.weather-alerts.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.weather-alerts.value.serializer=io.quarkus.kafka.client.serialization.JsonObjectSerializer

mp.messaging.outgoing.flight-status.connector=smallrye-kafka
mp.messaging.outgoing.flight-status.topic=flight-status
mp.messaging.outgoing.flight-status.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.flight-status.value.serializer=io.quarkus.kafka.client.serialization.JsonObjectSerializer

mp.messaging.outgoing.visa-reminders.connector=smallrye-kafka
mp.messaging.outgoing.visa-reminders.topic=visa-reminders
mp.messaging.outgoing.visa-reminders.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.visa-reminders.value.serializer=io.quarkus.kafka.client.serialization.JsonObjectSerializer

mp.messaging.outgoing.alert-aggregates.connector=smallrye-kafka
mp.messaging.outgoing.alert-aggregates.topic=alert-aggregates
mp.messaging.outgoing.alert-aggregates.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.alert-aggregates.value.serializer=io.quarkus.kafka.client.serialization.JsonObjectSerializer

# Topics d'entr√©e
mp.messaging.incoming.price-updates.connector=smallrye-kafka
mp.messaging.incoming.price-updates.topic=price-updates
mp.messaging.incoming.price-updates.group.id=alert-aggregator
mp.messaging.incoming.price-updates.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.price-updates.value.deserializer=io.quarkus.kafka.client.serialization.JsonObjectDeserializer
mp.messaging.incoming.price-updates.auto.offset.reset=earliest

mp.messaging.incoming.weather-alerts.connector=smallrye-kafka
mp.messaging.incoming.weather-alerts.topic=weather-alerts
mp.messaging.incoming.weather-alerts.group.id=alert-aggregator
mp.messaging.incoming.weather-alerts.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.weather-alerts.value.deserializer=io.quarkus.kafka.client.serialization.JsonObjectDeserializer
mp.messaging.incoming.weather-alerts.auto.offset.reset=earliest

mp.messaging.incoming.flight-status.connector=smallrye-kafka
mp.messaging.incoming.flight-status.topic=flight-status
mp.messaging.incoming.flight-status.group.id=alert-aggregator
mp.messaging.incoming.flight-status.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.flight-status.value.deserializer=io.quarkus.kafka.client.serialization.JsonObjectDeserializer
mp.messaging.incoming.flight-status.auto.offset.reset=earliest

mp.messaging.incoming.visa-reminders.connector=smallrye-kafka
mp.messaging.incoming.visa-reminders.topic=visa-reminders
mp.messaging.incoming.visa-reminders.group.id=alert-aggregator
mp.messaging.incoming.visa-reminders.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.visa-reminders.value.deserializer=io.quarkus.kafka.client.serialization.JsonObjectDeserializer
mp.messaging.incoming.visa-reminders.auto.offset.reset=earliest

# Logging
quarkus.log.level=INFO
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{2.}] (%t) %s%e%n
